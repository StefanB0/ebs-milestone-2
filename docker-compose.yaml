services:
  app:
    image: ebs-milestone-2
    build: .
    env_file: .env
    environment:
      - DEBUG=false
    ports:
      - "8000:8000"
    depends_on:
      - postgres-db
      - minio
      - pg-hero
      - redis-db
      - rabbitmq-broker
      - elasticsearch
#    tty: true
#    entrypoint: bash
    volumes:
      - ./fixtures:/app/fixtures
  celery:
    image: ebs-milestone-2
    build: .
    environment:
      - DEBUG=false
    env_file: .env
    ports:
      - "5555:5555"
    depends_on:
      - app
      - mailhog-mock
    entrypoint: []
    command: celery -A config worker -l INFO
  celery-beat:
    image: ebs-milestone-2
    build: .
    environment:
      - DEBUG=false
    env_file: .env
    ports:
      - "5556:5555"
    depends_on:
      - app
      - mailhog-mock
    entrypoint: [ ]
    command: celery -A config beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
  postgres-db:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    command: postgres -c shared_preload_libraries=pg_stat_statements
    volumes:
      - ./postgres://docker-entrypoint-initdb.d
  pg-hero:
    image: ankane/pghero:latest
    environment:
      - DATABASE_URL=postgres://postgres:postgres@postgres-db:5432/postgres
    ports:
      - "8080:8080"
    depends_on:
      - postgres-db
    tty: true
  redis-db:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - ./local/db-data/redis-db:/data/redis
  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000" # MinIO port
      - "9001:9001" # MinIO dashboard
    volumes:
      - data:/data
    environment:
      - "MINIO_ROOT_USER=admin"
      - "MINIO_ROOT_PASSWORD=admin-admin"
    command: server /data --console-address :9001
  mailhog-mock:
    image: mailhog/mailhog
    ports:
      - "1025:1025" # SMTP port
      - "8025:8025" # Dashboard
  rabbitmq-broker:
    image: rabbitmq
    ports:
      - "5672:5672"  # RabbitMQ port
      - "15672:15672"  # Management UI port
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.3
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
  kibana:
    image: docker.elastic.co/kibana/kibana:8.6.1
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
volumes:
  data: